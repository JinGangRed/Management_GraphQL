// <auto-generated />
using System;
using Domain.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Domain.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20200326090200_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Fix")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(125)")
                        .HasMaxLength(125);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 3, 26, 17, 2, 0, 282, DateTimeKind.Local).AddTicks(1258),
                            Fix = "539855",
                            Name = "宦梦月",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 3, 26, 17, 2, 0, 282, DateTimeKind.Local).AddTicks(8702),
                            Fix = "513756",
                            Name = "平恩宇",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 3, 26, 17, 2, 0, 283, DateTimeKind.Local).AddTicks(5243),
                            Fix = "224060",
                            Name = "和恩蓉",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 4,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 3, 26, 17, 2, 0, 284, DateTimeKind.Local).AddTicks(2700),
                            Fix = "123664",
                            Name = "那振淑",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 5,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 3, 26, 17, 2, 0, 285, DateTimeKind.Local).AddTicks(158),
                            Fix = "381607",
                            Name = "储婷",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 6,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 3, 26, 17, 2, 0, 285, DateTimeKind.Local).AddTicks(6559),
                            Fix = "665295",
                            Name = "葛金",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 7,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 3, 26, 17, 2, 0, 286, DateTimeKind.Local).AddTicks(3415),
                            Fix = "360072",
                            Name = "令狐子思",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 8,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 3, 26, 17, 2, 0, 286, DateTimeKind.Local).AddTicks(9878),
                            Fix = "584207",
                            Name = "谭钰宇",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 9,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 3, 26, 17, 2, 0, 288, DateTimeKind.Local).AddTicks(356),
                            Fix = "590559",
                            Name = "施旭雨",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 10,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 3, 26, 17, 2, 0, 288, DateTimeKind.Local).AddTicks(9418),
                            Fix = "501501",
                            Name = "苍淑",
                            Status = 0,
                            UpdateBy = "System"
                        });
                });

            modelBuilder.Entity("Domain.Models.CompanyDepartment", b =>
                {
                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("DepartmentId", "CompanyId");

                    b.HasIndex("CompanyId");

                    b.ToTable("CompanyDepartment");
                });

            modelBuilder.Entity("Domain.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 3, 26, 17, 2, 0, 290, DateTimeKind.Local).AddTicks(9581),
                            Name = "马静艺",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 3, 26, 17, 2, 0, 291, DateTimeKind.Local).AddTicks(7997),
                            Name = "糜子天",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 3, 26, 17, 2, 0, 292, DateTimeKind.Local).AddTicks(5019),
                            Name = "夏侯瑞晓",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 4,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 3, 26, 17, 2, 0, 293, DateTimeKind.Local).AddTicks(2013),
                            Name = "巩金承",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 5,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 3, 26, 17, 2, 0, 293, DateTimeKind.Local).AddTicks(8927),
                            Name = "巴紫",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 6,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 3, 26, 17, 2, 0, 294, DateTimeKind.Local).AddTicks(5926),
                            Name = "巩梓",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 7,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 3, 26, 17, 2, 0, 295, DateTimeKind.Local).AddTicks(3008),
                            Name = "栾琳海",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 8,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 3, 26, 17, 2, 0, 296, DateTimeKind.Local).AddTicks(4824),
                            Name = "钮炅",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 9,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 3, 26, 17, 2, 0, 297, DateTimeKind.Local).AddTicks(1992),
                            Name = "郁晨明",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 10,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 3, 26, 17, 2, 0, 297, DateTimeKind.Local).AddTicks(8798),
                            Name = "邰嘉海",
                            Status = 0,
                            UpdateBy = "System"
                        });
                });

            modelBuilder.Entity("Domain.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Account = "Admin",
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 3, 26, 17, 2, 0, 148, DateTimeKind.Local).AddTicks(7084),
                            Name = "何骄",
                            NickName = "牛明欣",
                            Password = "Admin",
                            Status = 0,
                            UpdateBy = "System"
                        });
                });

            modelBuilder.Entity("Domain.Models.Company", b =>
                {
                    b.OwnsOne("Domain.Models.Address", "Address", b1 =>
                        {
                            b1.Property<int>("CompanyId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(25)")
                                .HasMaxLength(25);

                            b1.Property<string>("DetailAddress")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Province")
                                .HasColumnType("nvarchar(25)")
                                .HasMaxLength(25);

                            b1.Property<string>("Region")
                                .HasColumnType("nvarchar(500)")
                                .HasMaxLength(500);

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(500)")
                                .HasMaxLength(500);

                            b1.HasKey("CompanyId");

                            b1.ToTable("Company");

                            b1.WithOwner()
                                .HasForeignKey("CompanyId");

                            b1.OwnsOne("Domain.Models.Country", "Country", b2 =>
                                {
                                    b2.Property<int>("AddressCompanyId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("Address")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Continent")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Name")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("AddressCompanyId");

                                    b2.ToTable("Company");

                                    b2.WithOwner()
                                        .HasForeignKey("AddressCompanyId");
                                });
                        });
                });

            modelBuilder.Entity("Domain.Models.CompanyDepartment", b =>
                {
                    b.HasOne("Domain.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.Employee", b =>
                {
                    b.HasOne("Domain.Models.Company", "Company")
                        .WithMany("Emplyees")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Domain.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
