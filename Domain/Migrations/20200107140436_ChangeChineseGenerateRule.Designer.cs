// <auto-generated />
using System;
using Domain.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Domain.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20200107140436_ChangeChineseGenerateRule")]
    partial class ChangeChineseGenerateRule
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Fix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("Domain.Models.CompanyDepartment", b =>
                {
                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("DepartmentId", "CompanyId");

                    b.HasIndex("CompanyId");

                    b.ToTable("CompanyDepartment");
                });

            modelBuilder.Entity("Domain.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("Domain.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Emplyee");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Account = "1201161703",
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 7, 22, 4, 35, 676, DateTimeKind.Local).AddTicks(604),
                            Name = "确绽 和",
                            NickName = "纫汕 从",
                            Password = "633572060",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            Account = "630371293",
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 7, 22, 4, 35, 686, DateTimeKind.Local).AddTicks(1095),
                            Name = "霖 顾",
                            NickName = "盖 柳",
                            Password = "2108446783",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            Account = "1539791011",
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 7, 22, 4, 35, 686, DateTimeKind.Local).AddTicks(1465),
                            Name = "粮 弓",
                            NickName = "魂 韩",
                            Password = "690030426",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 4,
                            Account = "188263780",
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 7, 22, 4, 35, 686, DateTimeKind.Local).AddTicks(1621),
                            Name = "陵 平",
                            NickName = "亭每 谢",
                            Password = "122540178",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 5,
                            Account = "418570974",
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 7, 22, 4, 35, 686, DateTimeKind.Local).AddTicks(1784),
                            Name = "苟环 乜",
                            NickName = "亚 应",
                            Password = "768661316",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 6,
                            Account = "1784875099",
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 7, 22, 4, 35, 686, DateTimeKind.Local).AddTicks(1991),
                            Name = "扶 艾",
                            NickName = "悯返 郁",
                            Password = "173460992",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 7,
                            Account = "1207163403",
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 7, 22, 4, 35, 686, DateTimeKind.Local).AddTicks(2156),
                            Name = "汉芳 於",
                            NickName = "做闭 巢",
                            Password = "823112832",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 8,
                            Account = "1981781499",
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 7, 22, 4, 35, 686, DateTimeKind.Local).AddTicks(2380),
                            Name = "少肠 葛",
                            NickName = "穗评 尚",
                            Password = "985820694",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 9,
                            Account = "97963185",
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 7, 22, 4, 35, 686, DateTimeKind.Local).AddTicks(2561),
                            Name = "怕 危",
                            NickName = "搪泳 柏",
                            Password = "342857797",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 10,
                            Account = "1279784390",
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 7, 22, 4, 35, 686, DateTimeKind.Local).AddTicks(2720),
                            Name = "嫌 东方",
                            NickName = "岸 尤",
                            Password = "427343144",
                            Status = 0,
                            UpdateBy = "System"
                        });
                });

            modelBuilder.Entity("Domain.Models.Company", b =>
                {
                    b.OwnsOne("Domain.Models.Address", "Address", b1 =>
                        {
                            b1.Property<int>("CompanyId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("DetailAddress")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Province")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Region")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CompanyId");

                            b1.ToTable("Company");

                            b1.WithOwner()
                                .HasForeignKey("CompanyId");
                        });
                });

            modelBuilder.Entity("Domain.Models.CompanyDepartment", b =>
                {
                    b.HasOne("Domain.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.Employee", b =>
                {
                    b.HasOne("Domain.Models.Company", "Company")
                        .WithMany("Emplyees")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Domain.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
