// <auto-generated />
using System;
using Domain.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Domain.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Fix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 9, 23, 16, 48, 848, DateTimeKind.Local).AddTicks(6654),
                            Fix = "825928",
                            Name = "夏协侦",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 9, 23, 16, 48, 848, DateTimeKind.Local).AddTicks(6868),
                            Fix = "833503",
                            Name = "郦烤",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 9, 23, 16, 48, 848, DateTimeKind.Local).AddTicks(6952),
                            Fix = "924850",
                            Name = "房贺",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 4,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 9, 23, 16, 48, 848, DateTimeKind.Local).AddTicks(7050),
                            Fix = "260953",
                            Name = "嵇雍蝇",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 5,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 9, 23, 16, 48, 848, DateTimeKind.Local).AddTicks(7146),
                            Fix = "993529",
                            Name = "钱治酬",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 6,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 9, 23, 16, 48, 848, DateTimeKind.Local).AddTicks(7293),
                            Fix = "127584",
                            Name = "郤棕",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 7,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 9, 23, 16, 48, 848, DateTimeKind.Local).AddTicks(7372),
                            Fix = "192354",
                            Name = "诸哉",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 8,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 9, 23, 16, 48, 848, DateTimeKind.Local).AddTicks(7469),
                            Fix = "452702",
                            Name = "祝数韭",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 9,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 9, 23, 16, 48, 848, DateTimeKind.Local).AddTicks(7544),
                            Fix = "254041",
                            Name = "张馒",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 10,
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 9, 23, 16, 48, 848, DateTimeKind.Local).AddTicks(7640),
                            Fix = "847251",
                            Name = "衡精宵",
                            Status = 0,
                            UpdateBy = "System"
                        });
                });

            modelBuilder.Entity("Domain.Models.CompanyDepartment", b =>
                {
                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("DepartmentId", "CompanyId");

                    b.HasIndex("CompanyId");

                    b.ToTable("CompanyDepartment");
                });

            modelBuilder.Entity("Domain.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("Domain.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Emplyee");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Account = "475942205",
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 9, 23, 16, 48, 840, DateTimeKind.Local).AddTicks(6797),
                            Name = "任庐",
                            NickName = "霍斧身",
                            Password = "1032206623",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            Account = "201407648",
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 9, 23, 16, 48, 846, DateTimeKind.Local).AddTicks(718),
                            Name = "施浩",
                            NickName = "危巫",
                            Password = "1823036751",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            Account = "1126270651",
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 9, 23, 16, 48, 846, DateTimeKind.Local).AddTicks(967),
                            Name = "卜橇稼",
                            NickName = "卜帝",
                            Password = "1120416200",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 4,
                            Account = "129812945",
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 9, 23, 16, 48, 846, DateTimeKind.Local).AddTicks(1186),
                            Name = "别跑窒",
                            NickName = "勾隐",
                            Password = "519693159",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 5,
                            Account = "126127557",
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 9, 23, 16, 48, 846, DateTimeKind.Local).AddTicks(1477),
                            Name = "诸揭",
                            NickName = "桂颂蠕",
                            Password = "628971930",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 6,
                            Account = "957595547",
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 9, 23, 16, 48, 846, DateTimeKind.Local).AddTicks(1628),
                            Name = "赵殊",
                            NickName = "步旺抒",
                            Password = "1703519036",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 7,
                            Account = "1631966449",
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 9, 23, 16, 48, 846, DateTimeKind.Local).AddTicks(1999),
                            Name = "蓝上写",
                            NickName = "钮概矛",
                            Password = "1488771521",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 8,
                            Account = "720710273",
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 9, 23, 16, 48, 846, DateTimeKind.Local).AddTicks(2183),
                            Name = "汲邯",
                            NickName = "成馁捧",
                            Password = "2062638398",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 9,
                            Account = "1179084547",
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 9, 23, 16, 48, 846, DateTimeKind.Local).AddTicks(2344),
                            Name = "糜袍",
                            NickName = "荀窿",
                            Password = "1204786089",
                            Status = 0,
                            UpdateBy = "System"
                        },
                        new
                        {
                            Id = 10,
                            Account = "750791301",
                            CreateBy = "System",
                            CreateTime = new DateTime(2020, 1, 9, 23, 16, 48, 846, DateTimeKind.Local).AddTicks(2638),
                            Name = "訾添鞘",
                            NickName = "韦淀",
                            Password = "2131813845",
                            Status = 0,
                            UpdateBy = "System"
                        });
                });

            modelBuilder.Entity("Domain.Models.Company", b =>
                {
                    b.OwnsOne("Domain.Models.Address", "Address", b1 =>
                        {
                            b1.Property<int>("CompanyId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("DetailAddress")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Province")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Region")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CompanyId");

                            b1.ToTable("Company");

                            b1.WithOwner()
                                .HasForeignKey("CompanyId");
                        });
                });

            modelBuilder.Entity("Domain.Models.CompanyDepartment", b =>
                {
                    b.HasOne("Domain.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.Employee", b =>
                {
                    b.HasOne("Domain.Models.Company", "Company")
                        .WithMany("Emplyees")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Domain.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
